# SPECCPU2017 duet config
#
# Initial paper ran these SPEC benchmarks:
# 500.perlbench r 502.gcc r 503.bwaves r 505.mcf r 507.cactuBSSN r 508.namd r 510.parest r
# 511.povray r 519.lbm r 520.omnetpp r 521.wrf r 523.xalancbmk r 525.x264 r 526.blender r
# 527.cam4 r 531.deepsjeng r 538.imagick r 541.leela r 544.nab r 548.exchange2 r 549.fotonik3d r
# 554.roms r 557.xz r -> run only Rate suits
#
# Was it in "peak" or "base" tuning? -> Not sure run in peak, there is new GCC
#
# Iteration count? -> same as in paper i.e. 10 iterations or 1 hour timeout
#
# Omit some benchmarks fail to build/traing or have too big size (>300 MB) to reduce the image size

duetbench:
  name: speccpu
  suite: speccpu
  verbose: false
  docker_command: docker

  remove_containers: true
  duet_repetitions: 1
  sequential_repetitions: 1

  artifacts:
    date: date
    hostname: hostname
    uname: uname -a
    lscpu: lscpu
    meminfo: cat /proc/meminfo

  image: speccpu

  results:
    - /duet/speccpu/result

  run_base: /duet/speccpu/bin/runcpu --config duet-gcc-linux-x86.cfg --iterations 10 --tuning peak --action onlyrun
  timeout: 1800

  duets:
    # SPECrate速2017 Integer (intrate) and SPECspeed速2017 Integer (intspeed)
    ## C 362 Perl interpreter
    - 500.perlbench_r
    #- 600.perlbench_s

    ## C 1,304 GNU C compiler
    # OMIT: Size (700 MB + 500 MB)
    #- 502.gcc_r
    #- 602.gcc_s

    ## C 3 Route planning
    - 505.mcf_r
    #- 605.mcf_s

    ## C++ 134 Discrete Event simulation - computer network
    # Size (300 MB + 240 MB)
    - 520.omnetpp_r
    #- 620.omnetpp_s

    ## C++ 520 XML to HTML conversion via XSLT
    # OMIT: Size (890 MB)
    #- 523.xalancbmk_r
    #- 623.xalancbmk_s

    ## C 96 Video compression
    # OMIT: Size (300 MB + 200 MB)
    - 525.x264_r
    #- 625.x264_s

    ## C++ 10 Artificial Intelligence: alpha-beta tree search (Chess)
    - 531.deepsjeng_r
    # ERROR Training
    #- 631.deepsjeng_s

    ## C++ 21 Artificial Intelligence: Monte Carlo tree search (Go)
    - 541.leela_r
    #- 641.leela_s

    ## Fortran 1 Artificial Intelligence: recursive solution generator (Sudoku)
    - 548.exchange2_r
    #- 648.exchange2_s

    ## C 33 General data compression
    - 557.xz_r
    #- 657.xz_s

    # SPECrate速2017 Floating Point (fprate) SPECspeed速2017 Floating Point (fpspeed)
    ## Fortran 1 Explosion modeling
    # ERROR Training: segfault
    #- 503.bwaves_r
    #- 603.bwaves_s

    ## C++, C, Fortran 257 Physics: relativity
    - 507.cactuBSSN_r
    #- 607.cactuBSSN_s

    ## C++ 8 Molecular dynamics
    - 508.namd_r

    ## C++ 427 Biomedical imaging: optical tomography with finite elements
    # ERROR Build: OOM
    #- 510.parest_r

    ## C++, C 170 Ray tracing
    - 511.povray_r

    # C 1 Fluid dynamics
    - 519.lbm_r
    #- 619.lbm_s

    ## Fortran, C 991 Weather forecasting
    # BUILD: type mismatch
    #- 521.wrf_r
    #- 621.wrf_s

    ## C++, C 1,577 3D rendering and animation
    # OMIT: Size (1.1GB)
    #- 526.blender_r

    ## Fortran, C 407 Atmosphere modeling
    # ERROR Build: type mismatch
    #- 527.cam4_r
    #- 627.cam4_s

    ## Fortran, C 338 Wide-scale ocean modeling (climate level)
    # OMIT: Size (300 MB)
    #- 628.pop2_s

    ## C 259 Image manipulation
    - 538.imagick_r
    #- 638.imagick_s

    ## C 24 Molecular dynamics
    - 544.nab_r
    #- 644.nab_s

    ## Fortran 14 Computational Electromagnetics
    - 549.fotonik3d_r
    #- 649.fotonik3d_s

    ## Fortran 210 Regional ocean modeling
    - 554.roms_r
    #- 654.roms_s

500.perlbench_r:
  A:
    run: 500.perlbench_r

600.perlbench_s:
  A:
    run: 600.perlbench_s

502.gcc_r:
  A:
    run: 502.gcc_r

602.gcc_s:
  A:
    run: 602.gcc_s

505.mcf_r:
  A:
    run: 505.mcf_r

605.mcf_s:
  A:
    run: 605.mcf_s

520.omnetpp_r:
  A:
    run: 520.omnetpp_r

620.omnetpp_s:
  A:
    run: 620.omnetpp_s

523.xalancbmk_r:
  A:
    run: 523.xalancbmk_r

623.xalancbmk_s:
  A:
    run: 623.xalancbmk_s

525.x264_r:
  A:
    run: 525.x264_r

625.x264_s:
  A:
    run: 625.x264_s

531.deepsjeng_r:
  A:
    run: 531.deepsjeng_r

631.deepsjeng_s:
  A:
    run: 631.deepsjeng_s

541.leela_r:
  A:
    run: 541.leela_r

641.leela_s:
  A:
    run: 641.leela_s

548.exchange2_r:
  A:
    run: 548.exchange2_r

648.exchange2_s:
  A:
    run: 648.exchange2_s

557.xz_r:
  A:
    run: 557.xz_r

657.xz_s:
  A:
    run: 657.xz_s

503.bwaves_r:
  A:
    run: 503.bwaves_r

603.bwaves_s:
  A:
    run: 603.bwaves_s

507.cactuBSSN_r:
  A:
    run: 507.cactuBSSN_r

607.cactuBSSN_s:
  A:
    run: 607.cactuBSSN_s

508.namd_r:
  A:
    run: 508.namd_r

510.parest_r:
  A:
    run: 510.parest_r

511.povray_r:
  A:
    run: 511.povray_r

519.lbm_r:
  A:
    run: 519.lbm_r

619.lbm_s:
  A:
    run: 619.lbm_s

521.wrf_r:
  A:
    run: 521.wrf_r

621.wrf_s:
  A:
    run: 621.wrf_s

526.blender_r:
  A:
    run: 526.blender_r

527.cam4_r:
  A:
    run: 527.cam4_r

627.cam4_s:
  A:
    run: 627.cam4_s

628.pop2_s:
  A:
    run: 628.pop2_s

538.imagick_r:
  A:
    run: 538.imagick_r

638.imagick_s:
  A:
    run: 638.imagick_s

544.nab_r:
  A:
    run: 544.nab_r

644.nab_s:
  A:
    run: 644.nab_s

549.fotonik3d_r:
  A:
    run: 549.fotonik3d_r

649.fotonik3d_s:
  A:
    run: 649.fotonik3d_s

554.roms_r:
  A:
    run: 554.roms_r

654.roms_s:
  A:
    run: 654.roms_s
